import { CleanupFn, AnyFn, If } from '@telegram-apps/sdk';
import { SDKContextItem } from './SDKProvider/SDKProvider.types.js';

type ExtractResult<T> = T extends [result: infer R, cleanup: CleanupFn] ? ExtractResult<R> : T extends PromiseLike<any> ? Awaited<T> | undefined : T;
type HookFnResult<Fn extends AnyFn> = ExtractResult<ReturnType<Fn>>;
interface CompleteHook<Result> extends Hook<Result, true>, Hook<Result, false> {
}
export type Hook<Result, SSR extends boolean> = If<SSR, (ssr: true) => Result | undefined, (ssr?: false) => Result>;
export interface HookRaw<Factory extends AnyFn> extends CompleteHook<SDKContextItem<HookFnResult<Factory>>> {
}
export interface HookResult<Factory extends AnyFn> extends CompleteHook<HookFnResult<Factory>> {
}
export type Hooks<Factory extends AnyFn> = [
    useRaw: HookRaw<Factory>,
    useResult: HookResult<Factory>
];
/**
 * @returns Hooks, simplifying work process with the SDK components.
 */
export declare function createHooks<Factory extends AnyFn>(factory: Factory): Hooks<Factory>;
export {};
